apiVersion: apps/v1
kind: Deployment
metadata:
  name: artsy-unleash-web
  namespace: default
  labels:
    app: artsy-unleash
    component: web
    layer: application
    app.kubernetes.io/version: production
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: artsy-unleash
      component: web
      layer: application
  template:
    metadata:
      labels:
        app: artsy-unleash
        component: web
        layer: application
        app.kubernetes.io/version: production
      name: artsy-unleash-web
    spec:
      initContainers:
      - name: setenv
        image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
        imagePullPolicy: Always
        command:
        - python
        - src/load/load.py
        - kubernetes
        - production
        - artsy-unleash
        envFrom:
        - configMapRef:
            name: secrets-config
        volumeMounts:
        - name: secrets
          mountPath: /secrets
      containers:
      - name: artsy-unleash-web
        env:
        - name: HTTP_PORT
          value: '8080'
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        envFrom:
        - configMapRef:
            name: secrets-config
        - configMapRef:
            name: artsy-unleash-environment
        volumeMounts:
        - name: secrets
          mountPath: /secrets
          readOnly: true
        image: {{ project_repo }}:production
        imagePullPolicy: Always
        ports:
        - name: unleash-http
          containerPort: 8080
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            memory: 1Gi
        readinessProbe:
          httpGet:
            port: unleash-http
            path: /
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: '1'
      serviceAccountName: artsy-unleash
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: tier
                operator: In
                values:
                - foreground
      volumes:
      - name: secrets
        emptyDir: {}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: artsy-unleash-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artsy-unleash-web
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: artsy-unleash
    component: web
    layer: application
  name: artsy-unleash-web-internal
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    name: http
    targetPort: unleash-http
  selector:
    app: artsy-unleash
    layer: application
    component: web
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: artsy-unleash
spec:
  ingressClassName: nginx
  rules:
  - host: unleash.artsy.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: artsy-unleash-web-internal
            port:
              name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: artsy-unleash-proxy-web
  namespace: default
  labels:
    app: artsy-unleash-proxy
    component: web
    layer: application
    app.kubernetes.io/version: production
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: artsy-unleash-proxy
      component: web
      layer: application
  template:
    metadata:
      labels:
        app: artsy-unleash-proxy
        component: web
        layer: application
        app.kubernetes.io/version: production
      name: artsy-unleash-proxy-web
    spec:
      initContainers:
      - name: setenv
        image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
        imagePullPolicy: Always
        command:
        - python
        - src/load/load.py
        - kubernetes
        - production
        - artsy-unleash-proxy
        envFrom:
        - configMapRef:
            name: secrets-config
        volumeMounts:
        - name: secrets
          mountPath: /secrets
      containers:
      - name: artsy-unleash-proxy-web
        env:
        - name: PORT
          value: '4242'
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        envFrom:
        - configMapRef:
            name: secrets-config
        - configMapRef:
            name: artsy-unleash-proxy-environment
        volumeMounts:
        - name: secrets
          mountPath: /secrets
          readOnly: true
        image: unleashorg/unleash-proxy
        imagePullPolicy: Always
        ports:
        - name: unleashprx-http
          containerPort: 4242
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            memory: 512Mi
        readinessProbe:
          httpGet:
            port: unleashprx-http
            path: /proxy/health
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: '1'
      serviceAccountName: artsy-unleash-proxy
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: tier
                operator: In
                values:
                - foreground
      volumes:
      - name: secrets
        emptyDir: {}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: artsy-unleash-proxy-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artsy-unleash-proxy-web
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: artsy-unleash-proxy
    component: web
    layer: application
  name: artsy-unleash-proxy-web-internal
  namespace: default
spec:
  ports:
  - port: 4242
    protocol: TCP
    name: prx-http
    targetPort: unleashprx-http
  selector:
    app: artsy-unleash-proxy
    layer: application
    component: web
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: artsy-unleash-proxy
spec:
  ingressClassName: nginx
  rules:
  - host: unleashprx.artsy.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: artsy-unleash-proxy-web-internal
            port:
              name: prx-http
